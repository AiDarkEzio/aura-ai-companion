// app/actions/preferences-actions.ts
"use server";

import { getUserIdFromSession } from "@/lib/auth";
import prisma from "@/lib/prisma";
import { Theme } from "@/app/generated/prisma"; // Use the Theme enum generated by Prisma

/**
 * Fetches the theme preference for the currently logged-in user.
 * Defaults to 'SYSTEM' if no preference is set.
 */
export async function getUserThemePreference(): Promise<Theme | undefined> {
  const userId = await getUserIdFromSession();
  if (!userId) {
    return undefined;
  }

  const preferences = await prisma.preferences.findUnique({
    where: { userId },
    select: { theme: true },
  });

  return preferences?.theme ?? undefined;
}

/**
 * Updates the theme preference for the currently logged-in user.
 */
export async function updateUserThemePreference(theme: Theme) {
  const userId = await getUserIdFromSession();
  if (!userId) {
    return;
  }

  await prisma.preferences.upsert({
    where: { userId },
    update: { theme },
    create: { userId, theme },
  });
}
